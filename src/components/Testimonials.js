'use client'

import React, { useState, useEffect } from 'react'
import {
	Star,
	Quote,
	ChevronLeft,
	ChevronRight,
	Users,
	Award,
	Heart,
} from 'lucide-react'
import styles from './Testimonials.module.css'

const Testimonials = () => {
	const [currentTestimonial, setCurrentTestimonial] = useState(0)
	const [isVisible, setIsVisible] = useState(false)

	useEffect(() => {
		const timer = setTimeout(() => setIsVisible(true), 300)
		return () => clearTimeout(timer)
	}, [])

	const testimonials = [
		{
			id: 1,
			name: '–ö–æ—Å—Ç—è –ì–æ—Ä—ñ–ª–æ–≤',
			age: 16,
			position: '–í–∏–ø—É—Å–∫–Ω–∏–∫ SmartCode Academy',
			company: 'Junior Developer –≤ —Å—Ç–∞—Ä—Ç–∞–ø—ñ',
			rating: 5,
			text: 'SmartCode Academy - —Ü–µ –Ω–∞–π–∫—Ä–∞—â–∞ —à–∫–æ–ª–∞ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è! –ó–∞–≤–¥—è–∫–∏ —è–∫—ñ—Å–Ω–æ–º—É –Ω–∞–≤—á–∞–Ω–Ω—é —Ç–∞ –ø—ñ–¥—Ç—Ä–∏–º—Ü—ñ –º–µ–Ω—Ç–æ—Ä—ñ–≤ —è –∑–º—ñ–≥ –æ—Å–≤–æ—ó—Ç–∏ Python —Ç–∞ —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Å–≤—ñ–π –ø–µ—Ä—à–∏–π –¥–æ–¥–∞—Ç–æ–∫. –¢–µ–ø–µ—Ä —è –Ω–∞–≤—ñ—Ç—å –ø—ñ–¥—Ä–æ–±–ª—è—é —è–∫ –¥–∂—É–Ω—ñ–æ—Ä —Ä–æ–∑—Ä–æ–±–Ω–∏–∫!',
			avatar: 'üë®‚Äçüíª',
			course: 'Python & Web Development',
			duration: '8 –º—ñ—Å—è—Ü—ñ–≤',
			achievement: '–°—Ç–≤–æ—Ä–∏–≤ –≤–ª–∞—Å–Ω–∏–π –¥–æ–¥–∞—Ç–æ–∫',
			gradient: 'blue',
		},
		{
			id: 2,
			name: '–ê–Ω–∞—Å—Ç–∞—Å—ñ—è –°—É—Ö–∞–Ω–æ–≤–∞',
			age: 15,
			position: '–í–∏–ø—É—Å–∫–Ω–∏—Ü—è SmartCode Academy',
			company: '–§—Ä—ñ–ª–∞–Ω—Å–µ—Ä –≤–µ–±-–¥–∏–∑–∞–π–Ω–µ—Ä',
			rating: 5,
			text: '–ù–∞–≤—á–∞–Ω–Ω—è –≤ SmartCode Academy –∑–º—ñ–Ω–∏–ª–æ –º–æ—î –∂–∏—Ç—Ç—è! –¢—É—Ç —è –Ω–µ —Ç—ñ–ª—å–∫–∏ –≤–∏–≤—á–∏–ª–∞ HTML, CSS —Ç–∞ JavaScript, –∞–ª–µ –π –Ω–∞–≤—á–∏–ª–∞—Å—è –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –≤ –∫–æ–º–∞–Ω–¥—ñ. –¢–µ–ø–µ—Ä —è —Å—Ç–≤–æ—Ä—é—é —Å–∞–π—Ç–∏ –¥–ª—è –º–∞–ª–æ–≥–æ –±—ñ–∑–Ω–µ—Å—É —Ç–∞ –∑–∞—Ä–æ–±–ª—è—é –≤–ª–∞—Å–Ω—ñ –≥—Ä–æ—à—ñ.',
			avatar: 'üë©‚Äçüíª',
			course: 'Frontend Development',
			duration: '6 –º—ñ—Å—è—Ü—ñ–≤',
			achievement: '–ó–∞–ø—É—Å—Ç–∏–ª–∞ –≤–ª–∞—Å–Ω–µ –∞–≥–µ–Ω—Ç—Å—Ç–≤–æ',
			gradient: 'purple',
		},
		{
			id: 3,
			name: '–ë–æ–≥–¥–∞–Ω –Ø—Ä–µ–º—á—É–∫',
			age: 14,
			position: '–°—Ç—É–¥–µ–Ω—Ç SmartCode Academy',
			company: '–ü–µ—Ä–µ–º–æ–∂–µ—Ü—å —Ö–∞–∫–∞—Ç–æ–Ω—É',
			rating: 5,
			text: '–í SmartCode Academy —è –∑–Ω–∞–π—à–æ–≤ –¥—Ä—É–∑—ñ–≤-–æ–¥–Ω–æ–¥—É–º—Ü—ñ–≤ —Ç–∞ —Å—Ç–≤–æ—Ä–∏–≤ —Å–≤–æ—é –ø–µ—Ä—à—É –≥—Ä—É –≤ Unity! –í–∏–∫–ª–∞–¥–∞—á—ñ –∑–∞–≤–∂–¥–∏ –≥–æ—Ç–æ–≤—ñ –¥–æ–ø–æ–º–æ–≥—Ç–∏, –∞ –Ω–∞–≤—á–∞–ª—å–Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥—É–∂–µ –∑—Ä—É—á–Ω–∞. –†–µ–∫–æ–º–µ–Ω–¥—É—é –≤—Å—ñ–º, —Ö—Ç–æ —Ö–æ—á–µ —Å—Ç–∞—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç–æ–º!',
			avatar: 'üë®‚Äçüéì',
			course: 'Game Development',
			duration: '10 –º—ñ—Å—è—Ü—ñ–≤',
			achievement: '1-–µ –º—ñ—Å—Ü–µ –Ω–∞ —Ö–∞–∫–∞—Ç–æ–Ω—ñ',
			gradient: 'green',
		},
		{
			id: 4,
			name: '–í–ª–∞–¥ –®—É–ª—å–∂–µ–Ω–∫–æ',
			age: 17,
			position: '–í–∏–ø—É—Å–∫–Ω–∏–∫ SmartCode Academy',
			company: '–°—Ç—É–¥–µ–Ω—Ç —Ç–µ—Ö–Ω—ñ—á–Ω–æ–≥–æ –í–ù–ó',
			rating: 5,
			text: '–ó–∞–≤–¥—è–∫–∏ SmartCode Academy —è –≤—Å—Ç—É–ø–∏–≤ –¥–æ —Ç–µ—Ö–Ω—ñ—á–Ω–æ–≥–æ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—É –∑ –≤—ñ–¥–º—ñ–Ω–Ω–æ—é –ø—ñ–¥–≥–æ—Ç–æ–≤–∫–æ—é! –ó–Ω–∞–Ω–Ω—è –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è, —è–∫—ñ —è –æ—Ç—Ä–∏–º–∞–≤ —Ç—É—Ç, –¥–æ–ø–æ–º–∞–≥–∞—é—Ç—å –º–µ–Ω—ñ –±—É—Ç–∏ –∫—Ä–∞—â–∏–º –∑–∞ –æ–¥–Ω–æ–∫—É—Ä—Å–Ω–∏–∫—ñ–≤. –î—É–∂–µ –≤–¥—è—á–Ω–∏–π –∑–∞ —è–∫—ñ—Å–Ω—É –æ—Å–≤—ñ—Ç—É!',
			avatar: 'üßë‚Äçüíª',
			course: 'Full-Stack Development',
			duration: '12 –º—ñ—Å—è—Ü—ñ–≤',
			achievement: '–í—Å—Ç—É–ø –¥–æ –¢–û–ü –í–ù–ó',
			gradient: 'orange',
		},
		{
			id: 5,
			name: '–ì–∞–ª–∏–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞',
			age: 13,
			position: '–°—Ç—É–¥–µ–Ω—Ç–∫–∞ SmartCode Academy',
			company: '–ú–æ–ª–æ–¥—à–∏–π —Ä–æ–∑—Ä–æ–±–Ω–∏–∫',
			rating: 5,
			text: '–ú–µ–Ω—ñ —Ç—ñ–ª—å–∫–∏ 13, –∞–ª–µ –∑–∞–≤–¥—è–∫–∏ SmartCode Academy —è –≤–∂–µ —Å—Ç–≤–æ—Ä—é—é –≤–ª–∞—Å–Ω—ñ –ø—Ä–æ–µ–∫—Ç–∏! –û—Å–æ–±–ª–∏–≤–æ –ø–æ–¥–æ–±–∞—î—Ç—å—Å—è —Ä–æ–±–æ—Ç–∞ –∑ –º–µ–Ω—Ç–æ—Ä–æ–º - –≤—ñ–Ω –∑–∞–≤–∂–¥–∏ –ø–æ—è—Å–Ω–∏—Ç—å —Å–∫–ª–∞–¥–Ω—ñ –º–æ–º–µ–Ω—Ç–∏ –ø—Ä–æ—Å—Ç–∏–º–∏ —Å–ª–æ–≤–∞–º–∏. –ú—Ä—ñ—é —Å—Ç–∞—Ç–∏ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏–º –ø—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç–æ–º!',
			avatar: 'üë©‚Äçüéì',
			course: 'Python for Kids',
			duration: '4 –º—ñ—Å—è—Ü—ñ',
			achievement: '–ù–∞–π–º–æ–ª–æ–¥—à–∏–π –≤–∏–ø—É—Å–∫–Ω–∏–∫',
			gradient: 'pink',
		},
	]

	const stats = [
		{ number: '500+', label: '–í–∏–ø—É—Å–∫–Ω–∏–∫—ñ–≤', icon: <Users /> },
		{ number: '4.9', label: '–†–µ–π—Ç–∏–Ω–≥', icon: <Star /> },
		{ number: '95%', label: '–ó–∞–¥–æ–≤–æ–ª–µ–Ω–∏—Ö', icon: <Heart /> },
		{ number: '50+', label: '–ù–∞–≥–æ—Ä–æ–¥', icon: <Award /> },
	]

	const nextTestimonial = () => {
		setCurrentTestimonial(prev => (prev + 1) % testimonials.length)
	}

	const prevTestimonial = () => {
		setCurrentTestimonial(
			prev => (prev - 1 + testimonials.length) % testimonials.length
		)
	}

	const renderStars = rating => {
		return Array.from({ length: 5 }, (_, index) => (
			<Star
				key={index}
				size={16}
				className={index < rating ? styles.starFilled : styles.starEmpty}
				fill={index < rating ? '#fbbf24' : 'none'}
			/>
		))
	}

	const currentTestimonialData = testimonials[currentTestimonial]

	return (
		<section className={styles.testimonialsSection}>
			<div className={styles.container}>
				{/* Header */}
				<div
					className={`${styles.header} ${
						isVisible ? styles.headerVisible : ''
					}`}
				>
					<div className={styles.headerContent}>
						<div className={styles.badge}>
							<Quote className={styles.badgeIcon} />
							–í—ñ–¥–≥—É–∫–∏ —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤
						</div>
						<h2 className={styles.title}>
							–Ü—Å—Ç–æ—Ä—ñ—ó —É—Å–ø—ñ—Ö—É –Ω–∞—à–∏—Ö
							<span className={styles.titleAccent}>–≤–∏–ø—É—Å–∫–Ω–∏–∫—ñ–≤</span>
						</h2>
						<p className={styles.subtitle}>
							–î—ñ–∑–Ω–∞–π—Ç–µ—Å—è, —è–∫ SmartCode Academy –∑–º—ñ–Ω–∏–ª–∞ –∂–∏—Ç—Ç—è —Å–æ—Ç–µ–Ω—å –¥—ñ—Ç–µ–π —Ç–∞
							–ø—ñ–¥–ª—ñ—Ç–∫—ñ–≤
						</p>
					</div>
					<button className={styles.ctaButton}>
						<Users className={styles.ctaIcon} />
						–ü—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è –¥–æ —Å–ø—ñ–ª—å–Ω–æ—Ç–∏
					</button>
				</div>

				{/* Main Content */}
				<div
					className={`${styles.content} ${
						isVisible ? styles.contentVisible : ''
					}`}
				>
					{/* Featured Testimonial */}
					<div className={styles.featuredTestimonial}>
						<div
							className={`${styles.testimonialCard} ${
								styles[currentTestimonialData.gradient]
							}`}
						>
							<div className={styles.testimonialHeader}>
								<div className={styles.authorInfo}>
									<div className={styles.avatar}>
										{currentTestimonialData.avatar}
									</div>
									<div className={styles.authorDetails}>
										<h3 className={styles.authorName}>
											{currentTestimonialData.name}
											<span className={styles.authorAge}>
												({currentTestimonialData.age} —Ä–æ–∫—ñ–≤)
											</span>
										</h3>
										<p className={styles.authorPosition}>
											{currentTestimonialData.position}
										</p>
										<p className={styles.authorCompany}>
											{currentTestimonialData.company}
										</p>
									</div>
								</div>
								<div className={styles.rating}>
									{renderStars(currentTestimonialData.rating)}
								</div>
							</div>

							<div className={styles.testimonialContent}>
								<Quote className={styles.quoteIcon} />
								<p className={styles.testimonialText}>
									{currentTestimonialData.text}
								</p>
							</div>

							<div className={styles.testimonialFooter}>
								<div className={styles.courseInfo}>
									<div className={styles.courseTag}>
										üìö {currentTestimonialData.course}
									</div>
									<div className={styles.duration}>
										‚è±Ô∏è {currentTestimonialData.duration}
									</div>
								</div>
								<div className={styles.achievement}>
									üèÜ {currentTestimonialData.achievement}
								</div>
							</div>
						</div>

						{/* Navigation */}
						<div className={styles.testimonialNavigation}>
							<button className={styles.navBtn} onClick={prevTestimonial}>
								<ChevronLeft className={styles.navIcon} />
							</button>
							<div className={styles.testimonialIndicators}>
								{testimonials.map((_, index) => (
									<button
										key={index}
										className={`${styles.indicator} ${
											index === currentTestimonial ? styles.active : ''
										}`}
										onClick={() => setCurrentTestimonial(index)}
									/>
								))}
							</div>
							<button className={styles.navBtn} onClick={nextTestimonial}>
								<ChevronRight className={styles.navIcon} />
							</button>
						</div>
					</div>

					{/* Statistics */}
					<div className={styles.statsSection}>
						<h3 className={styles.statsTitle}>–ù–∞—à—ñ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è</h3>
						<div className={styles.statsGrid}>
							{stats.map((stat, index) => (
								<div
									key={index}
									className={styles.statCard}
									style={{ animationDelay: `${index * 0.1}s` }}
								>
									<div className={styles.statIcon}>{stat.icon}</div>
									<div className={styles.statNumber}>{stat.number}</div>
									<div className={styles.statLabel}>{stat.label}</div>
								</div>
							))}
						</div>
					</div>
				</div>

				{/* Additional Testimonials Grid */}
				<div className={styles.additionalTestimonials}>
					<h3 className={styles.gridTitle}>–ë—ñ–ª—å—à–µ –≤—ñ–¥–≥—É–∫—ñ–≤</h3>
					<div className={styles.testimonialsGrid}>
						{testimonials.slice(0, 4).map((testimonial, index) => (
							<div
								key={testimonial.id}
								className={`${styles.miniTestimonial} ${
									index === currentTestimonial ? styles.highlighted : ''
								}`}
								onClick={() => setCurrentTestimonial(index)}
							>
								<div className={styles.miniHeader}>
									<div className={styles.miniAvatar}>{testimonial.avatar}</div>
									<div className={styles.miniInfo}>
										<div className={styles.miniName}>{testimonial.name}</div>
										<div className={styles.miniCourse}>
											{testimonial.course}
										</div>
									</div>
									<div className={styles.miniRating}>
										{renderStars(testimonial.rating)}
									</div>
								</div>
								<p className={styles.miniText}>
									{testimonial.text.substring(0, 120)}...
								</p>
							</div>
						))}
					</div>
				</div>
			</div>
		</section>
	)
}

export default Testimonials
