"use client"
import React, { useState } from 'react'
import { ChevronLeft, ChevronRight } from 'lucide-react'
import styles from './HeroSection.module.css'

const HeroSection = () => {
	const [currentSlide, setCurrentSlide] = useState(0)

	const slides = [
		{
			title: '–û–Ω–ª–∞–π–Ω-—à–∫–æ–ª–∞ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è CodeMaster',
			subtitle:
				'–¶–µ –º—ñ—Å—Ü–µ, –¥–µ –Ω–∞ –≤–∞—Å —á–µ–∫–∞—é—Ç—å –Ω–∞–π–∫—Ä–∞—â—ñ –≤–∏–∫–ª–∞–¥–∞—á—ñ, –ø–µ—Ä–µ–¥–æ–≤—ñ –Ω–∞–≤—á–∞–ª—å–Ω—ñ –º–µ—Ç–æ–¥–∏–∫–∏ —Ç–∞ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ñ –∑–∞–Ω—è—Ç—Ç—è –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è–º –æ–Ω–ª–∞–π–Ω. –ê —â–µ:',
			rightTitle: '–£—Å–µ –∫–æ—Ä–∏—Å–Ω–µ –≤ –æ–¥–Ω–æ–º—É –º—ñ—Å—Ü—ñ',
			rightContent:
				'–£—Å—ñ –Ω–∞—à—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏ —Ç–∞ –∫—É—Ä—Å–∏ –¥–ª—è –≤–∏–≤—á–µ–Ω–Ω—è –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è –∑—ñ–±—Ä–∞–Ω—ñ –Ω–∞ –æ–¥–Ω—ñ–π –∑—Ä—É—á–Ω—ñ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ñ: –≤—ñ–¥ —Ü—ñ–∫–∞–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É –¥–æ —Ç—Ä–µ–Ω—É–≤–∞–ª—å–Ω–∏—Ö —ñ –¥–æ–º–∞—à–Ω—ñ—Ö –∑–∞–≤–¥–∞–Ω—å',
			mockupContent: {
				title: 'CodeMaster',
				subtitle: 'Programming Courses',
				courses: ['JavaScript', 'Python', 'React', 'Node.js'],
				features: [
					'Interactive Coding',
					'Live Sessions',
					'Code Reviews',
					'Projects',
				],
			},
		},
		{
			title: '–Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –Ω–∞–≤—á–∞–Ω–Ω—è –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è',
			subtitle:
				'–í–∏–≤—á–∞–π—Ç–µ –∫–æ–¥ —á–µ—Ä–µ–∑ –ø—Ä–∞–∫—Ç–∏–∫—É –∑ —Ä–µ–∞–ª—å–Ω–∏–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏, –º–µ–Ω—Ç–æ—Ä–æ–º —Ç–∞ –∫–æ–º–∞–Ω–¥–æ—é –æ–¥–Ω–æ–¥—É–º—Ü—ñ–≤. –û—Ç—Ä–∏–º–∞–π—Ç–µ:',
			rightTitle: '–ü—Ä–∞–∫—Ç–∏—á–Ω–∏–π –¥–æ—Å–≤—ñ–¥',
			rightContent:
				"–ü—Ä–∞—Ü—é–π—Ç–µ –Ω–∞–¥ —Ä–µ–∞–ª—å–Ω–∏–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏, –æ—Ç—Ä–∏–º—É–π—Ç–µ –∑–≤–æ—Ä–æ—Ç–Ω–∏–π –∑–≤'—è–∑–æ–∫ –≤—ñ–¥ –º–µ–Ω—Ç–æ—Ä—ñ–≤ —Ç–∞ –±—É–¥—É–π—Ç–µ –ø–æ—Ä—Ç—Ñ–æ–ª—ñ–æ, —è–∫–µ –¥–æ–ø–æ–º–æ–∂–µ –∑–Ω–∞–π—Ç–∏ —Ä–æ–±–æ—Ç—É –º—Ä—ñ—ó",
			mockupContent: {
				title: 'Live Coding',
				subtitle: 'Real-time Practice',
				courses: ['Full-Stack', 'Frontend', 'Backend', 'DevOps'],
				features: [
					'Git Workflow',
					'Code Reviews',
					'Team Projects',
					'Mentorship',
				],
			},
		},
	]

	const nextSlide = () => {
		setCurrentSlide(prev => (prev + 1) % slides.length)
	}

	const prevSlide = () => {
		setCurrentSlide(prev => (prev - 1 + slides.length) % slides.length)
	}

	const currentSlideData = slides[currentSlide]

	return (
		<section className={styles.heroSection}>
			<div className={styles.container}>
				<div className={styles.content}>
					{/* –õ–µ–≤–∞—è —á–∞—Å—Ç—å */}
					<div className={styles.leftContent}>
						<h1 className={styles.title}>{currentSlideData.title}</h1>
						<p className={styles.subtitle}>{currentSlideData.subtitle}</p>
					</div>

					{/* –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è —á–∞—Å—Ç—å —Å –º–æ–∫–∞–ø–æ–º */}
					<div className={styles.centerContent}>
						<div className={styles.mockupContainer}>
							<div className={styles.computerMockup}>
								<div className={styles.screen}>
									<div className={styles.browser}>
										<div className={styles.browserHeader}>
											<div className={styles.browserButtons}>
												<span></span>
												<span></span>
												<span></span>
											</div>
										</div>
										<div className={styles.browserContent}>
											<div className={styles.sidebar}>
												<div className={styles.logo}>
													<div className={styles.logoIcon}>üíª</div>
													<span>{currentSlideData.mockupContent.title}</span>
												</div>
												<nav className={styles.nav}>
													<div className={styles.navItem}>üìö –ö—É—Ä—Å–∏</div>
													<div className={styles.navItem}>üéØ –ü—Ä–∞–∫—Ç–∏–∫–∞</div>
													<div className={styles.navItem}>üë• –°–ø—ñ–ª—å–Ω–æ—Ç–∞</div>
													<div className={styles.navItem}>üìä –ü—Ä–æ–≥—Ä–µ—Å</div>
												</nav>
											</div>
											<div className={styles.mainContent}>
												<div className={styles.header}>
													<h3>{currentSlideData.mockupContent.subtitle}</h3>
												</div>
												<div className={styles.coursesGrid}>
													{currentSlideData.mockupContent.courses.map(
														(course, index) => (
															<div key={index} className={styles.courseCard}>
																<div className={styles.courseIcon}>üöÄ</div>
																<span>{course}</span>
															</div>
														)
													)}
												</div>
												<div className={styles.features}>
													{currentSlideData.mockupContent.features.map(
														(feature, index) => (
															<div key={index} className={styles.feature}>
																<span className={styles.checkmark}>‚úì</span>
																{feature}
															</div>
														)
													)}
												</div>
											</div>
										</div>
									</div>
								</div>
								<div className={styles.stand}></div>
							</div>
						</div>

						{/* –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å—Ç—Ä–µ–ª–∫–∏ */}
						<button className={styles.navButton} onClick={prevSlide}>
							<ChevronLeft size={24} />
						</button>
						<button
							className={`${styles.navButton} ${styles.navButtonRight}`}
							onClick={nextSlide}
						>
							<ChevronRight size={24} />
						</button>
					</div>

					{/* –ü—Ä–∞–≤–∞—è —á–∞—Å—Ç—å */}
					<div className={styles.rightContent}>
						<h2 className={styles.rightTitle}>{currentSlideData.rightTitle}</h2>
						<p className={styles.rightText}>{currentSlideData.rightContent}</p>
					</div>
				</div>

				{/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Å–ª–∞–π–¥–æ–≤ */}
				<div className={styles.slideIndicators}>
					{slides.map((_, index) => (
						<button
							key={index}
							className={`${styles.indicator} ${
								index === currentSlide ? styles.active : ''
							}`}
							onClick={() => setCurrentSlide(index)}
						/>
					))}
				</div>
			</div>
		</section>
	)
}

export default HeroSection
